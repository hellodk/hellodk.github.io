<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>https://hellodk.io/</title>
   
   <link>http://localhost:4000</link>
   <description>A beautiful narrative written over an elegant publishing platform. The story begins here...</description>
   <language>en-uk</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>The Perfect CI Pipeline</title>
	  <link>//the-perfect-ci-pipeline</link>
	  <author></author>
	  <pubDate>2023-01-16T01:02:00+05:30</pubDate>
	  <guid>//the-perfect-ci-pipeline</guid>
	  <description><![CDATA[
	     <h4 id="the-perfect-ci-pipeline">The Perfect CI Pipeline</h4>

<p>OSA
Code Coverage</p>

<p>DAST</p>

<h4 id="sast">SAST</h4>
<p>SAST (Static Application Security Testing) and SCA (Software Composition Analysis) are both tools used for identifying security vulnerabilities in software. However, they differ in how they go about this process:</p>

<p>SAST (Static Application Security Testing) analyzes the source code of an application to identify potential security vulnerabilities. This can include things like SQL injection, cross-site scripting (XSS), and insecure use of encryption. Because SAST analyzes the source code, it can be used early in the development process, before the application is deployed.</p>

<h4 id="sca">SCA</h4>
<p>SCA (Software Composition Analysis) analyzes the dependencies and third-party components of an application to identify potential security vulnerabilities. This can include things like known vulnerabilities in open-source libraries and frameworks. SCA is typically used after an application is deployed, as a way of identifying vulnerabilities that may have been introduced by third-party components.</p>

<p>In summary, SAST focuses on identifying vulnerabilities in the application code itself, while SCA focuses on identifying vulnerabilities in the dependencies and third-party components used by the application. Both tools are important for ensuring the security of an application and should be used in conjunction to get a complete overview of the applicationâ€™s vulnerabilities.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Productivity with Twitter</title>
	  <link>//productivity-with-twitter</link>
	  <author></author>
	  <pubDate>2022-12-26T02:26:00+05:30</pubDate>
	  <guid>//productivity-with-twitter</guid>
	  <description><![CDATA[
	     <h4 id="productivity-with-twitter">Productivity with Twitter</h4>


	  ]]></description>
	</item>


</channel>
</rss>
